####################################################################################################
### THIS pf.conf IS MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN!
####################################################################################################

####################################################################################################
################ options ###############################
set limit states 500000 # increased from default 10000
set limit frags 100000 # increased frm default 5000
set block-policy drop


####################################################################################################
################ macros ################################
{% for interface in network_interfaces %}
{% if interface.vlan is defined %}
{{ interface.pf_macro }}="{{ interface.interface }}.{{ interface.vlan }}"
{% else %}
{{ interface.pf_macro }}="{{ interface.interface }}"
{% endif %}
{% endfor %}

table <firewalls_own_ips> { {% for interface in network_interfaces %}{% for ip in interface["ips"] %}{% if "v4ip" in interface["ips"][ip] %}{{ interface["ips"][ip]["v4ip"] }} {% endif %}{% if "v6ip" in interface["ips"][ip] %}{{ interface["ips"][ip]["v6ip"] }} {% endif %}{% endfor %}{% endfor %} }
table <not_firewalls_own_ips> { {% for interface in network_interfaces %}{% for ip in interface["ips"] %}{% if "v4ip" in interface["ips"][ip] %}!{{ interface["ips"][ip]["v4ip"] }} {% endif %}{% if "v6ip" in interface["ips"][ip] %}!{{ interface["ips"][ip]["v6ip"] }} {% endif %}{% endfor %}{% endfor %} 0/0 0::/0 }

################ common/shared address macros ###############
{{ pf_common_address_macros | default("# No common macros found") }}

################ macros specific to {{ ansible_nodename }} #######################
{{ pf_local_address_macros | default("# No local macros found") }}


###################################################################################################
############### scrubbing ##############################
{% for interface in network_interfaces %}
{% if interface.pf_scrub %}
scrub in on ${{ interface.pf_macro }} all fragment reassemble
{% endif %}
{% endfor %}

############### outgoing translation NAT #################
{{ pf_nat_rules | default("# No NAT rules found") }}

############### incoming translation RDR ########################
{{ pf_rdr_rules | default("# No RDR rules found") }}


####################################################################################################
############### filtering ##############################
### block everything
block log all

### skip loopback interface(s)
set skip on lo0

{% if network_interfaces|length == 1 %}
{% for interface in network_interfaces %}
### this host is single homed, permit all outgoing traffic
pass out quick on ${{ interface.pf_macro }} from (${{ interface.pf_macro }})
{% endfor %}
{% endif %}

#######################################################
### GENERIC (autogenerated) INTERFACE RULES BELOW HERE

{% for interface in network_interfaces %}
## RULES FOR INTERFACE {{ interface.interface }} - {{ interface.description }}
# interface debug: {{ interface }}

# permit incoming ICMP4
pass in quick on ${{ interface.pf_macro }} inet proto icmp all icmp-type { unreach, echoreq, timex }

# permit incoming ICMP6
pass in quick on ${{ interface.pf_macro }} inet6 proto icmp6 all icmp6-type { echoreq, echorep, neighbradv, neighbrsol, routeradv, routersol, unreach, timex, paramprob }

# block remaining inbound traffic to the firewalls own IPs on this interface
block in quick on ${{ interface.pf_macro }} from any to <firewalls_own_ips>

# Permit all remaining inbound traffic on this interface
pass in quick on ${{ interface.pf_macro }}

# Permit traffic from the firewall itself on this interface
pass out quick on ${{ interface.pf_macro }} from <firewalls_own_ips> to any

{% if interface.pf_sync %}
# permit pfsync on this interface
pass quick on ${{ interface.pf_macro }} proto pfsync keep state (no-sync)
{% endif %}

{% if interface.pf_carp %}
# permit CARP on this interface
pass quick on ${{ interface.pf_macro }} proto carp keep state (no-sync)
{% endif %}

{% endfor %}


#######################################################
# CUSTOM FILTER RULES BELOW HERE (from pf_filter_rules dict)

{% for rule in pf_filter_rules %}
# {{ rule.comment }}
{% if rule.block is defined %}block{% else %}pass{% endif %}
{% if rule.direction is defined %} {{ rule.direction }}{% endif %}
{% if not rule.slow is defined %} quick{% endif %}
{% if rule.block is defined or rule.log is defined %} log{% endif %}
{% if rule.interfaces is defined %} on { {{ rule.interfaces | join(" ") }} }{% endif %}
{% if rule.reply_to is defined %} reply-to ( {{ rule.reply_to }} ){% endif %}
{% if rule.inet is defined %} {{ rule.inet }}{% endif %}
{% if rule.protocols is defined %} proto { {{ rule.protocols | join(" ") }} }{% endif %}
{% if rule.sources is defined %} from { {{ rule.sources | join(" ") }} }{% endif %}
{% if rule.destinations is defined %} to { {{ rule.destinations | join(" ") }} }{% endif %}
{% if rule.ports is defined %} port { {{ rule.ports | join(" ") }} }{% endif %}
{% if rule.tag is defined %} tag {{ rule.tag }}{% endif %}
{% if rule.tagged is defined %} tagged {{ rule.tagged }}{% endif %}


{% endfor %}

