---
- name: "Install pip"
  pkgng:
    name: "py37-pip"
    state: "present"

- name: "Install setuptools"
  pkgng:
    name: "py37-setuptools"
    state: "present"

- name: "Check if we have an existing virtualenv for Certgrinder"
  stat:
    path: "/usr/home/{{ certgrinder_user }}/virtualenv/"
  register: certgrinder_virtualenv
  changed_when: False

- name: "Check Python version of venv for Certgrinder"
  command: "/usr/home/{{ certgrinder_user }}/virtualenv/bin/python -V"
  register: python_version
  changed_when: False
  when: certgrinder_virtualenv.stat.exists

- name: "Remove py2.x venv if we have one"
  file:
    state: "absent"
    path: "/usr/home/{{ certgrinder_user }}/virtualenv"
  when:
    - certgrinder_virtualenv.stat.exists
    - python_version.stderr[0:8] == "Python 2"

- name: "Install virtualenv"
  pkgng:
    name: "py37-virtualenv"
    state: "present"

- name: "Create new virtualenv and install cryptography. Use CFLAGS and LDFLAGS env vars to force pip to use /usr/local/ ports OpenSSL include"
  pip:
    virtualenv_python: "python"
    name: "cryptography"
    virtualenv: "/usr/home/{{ certgrinder_user }}/virtualenv"
    extra_args: '--global-option=build_ext'
  environment:
    CFLAGS: "-I/usr/local/include"
    LDFLAGS: "-L/usr/local/include"

- name: "Upgrade pip to latest version to avoid problems when installing cffi"
  pip:
    name: "pip"
    state: "latest"
    virtualenv: "/usr/home/{{ certgrinder_user }}/virtualenv"

- name: "Install certgrinder in the virtualenv"
  pip:
    name: "certgrinder"
    state: "latest"
    virtualenv: "/usr/home/{{ certgrinder_user }}/virtualenv"

- name: "Create certificates directory"
  file:
    dest: "/usr/home/{{ certgrinder_user }}/certificates"
    state: "directory"
    mode: "0750"
    owner: "{{ certgrinder_user }}"

- name: "Create certgrinder.conf config file"
  template:
    src: "certgrinder.conf.j2"
    dest: "/usr/home/{{ certgrinder_user }}/certgrinder.conf"
    owner: "{{ certgrinder_user }}"
    mode: "0644"
