---
- name: "Create certgrinder user .ssh directory"
  file:
    path: "/usr/local/etc/certgrinder/.ssh"
    state: "directory"
    mode: "0700"

- name: "Create SSH key for certgrinder user"
  command: "/usr/bin/ssh-keygen -t ed25519 -f {{ certgrinder_home }}/.ssh/id_ed25519 -N ''"
  args:
    creates: "{{ certgrinder_home }}/.ssh/id_ed25519"
  register: result

- name: "Make sure certgrinder user owns the created SSH key directory"
  file:
    path: "{{ certgrinder_home }}/.ssh"
    owner: "{{ certgrinder_user }}"
    group: "{{ certgrinder_user }}"
    mode: "0700"
    state: "directory"
  when: result is changed

- name: "Make sure certgrinder user owns the created SSH key"
  file:
    path: "{{ item }}"
    owner: "{{ certgrinder_user }}"
    group: "{{ certgrinder_user }}"
    mode: "0600"
  with_items:
    - "{{ certgrinder_home }}/.ssh/id_ed25519"
    - "{{ certgrinder_home }}/.ssh/id_ed25519.pub"
  when: result is changed

- name: "Add sudoers permission so the certgrinder user can run post renew hooks"
  lineinfile:
    dest: "/usr/local/etc/sudoers.d/certgrinder"
    state: "present"
    line: "{{ certgrinder_user }} ALL=(ALL) NOPASSWD: {{ item.split(' ')[1:] | join(' ') }}"
    validate: "visudo -cf %s"
    create: True
  with_items: "{{ certgrinder_post_renew_hooks | default([]) }}"
  when: "'sudo' in item.split(' ')[0]"

- name: "Add ssh pubkey fingerprint to .ssh/known_hosts"
  lineinfile:
    dest: "{{ certgrinder_home }}/.ssh/known_hosts"
    state: "present"
    create: True
    owner: "{{ certgrinder_user }}"
    group: "{{ certgrinder_user }}"
    line: "{{ certgrinder_ssh_server }} ecdsa-sha2-nistp256 {{ certgrinder_ssh_server_pubkey }}"

- name: "add users to certgrinder group so they can read certificates - might fail if the user doesn't exist yet"
  command: "/usr/sbin/pw group mod {{ certgrinder_user }} -m {{ item }}"
  with_items: "{{ certgrinder_cert_users | default([]) }}"
  ignore_errors: True
