---
- name: "Install bird2"
  pkgng:
    name: "bird2"
    state: "present"
  notify: "start bird2"

- name: "Copy bird2 config"
  template:
    src: "bird.conf.j2"
    dest: "/usr/local/etc/bird.conf"
    mode: "0600"
  tags:
    - "birdconfig"
  notify: "reconfigure bird2"

- name: "Create bird2 extra config files..."
  copy:
    owner: "root"
    group: "wheel"
    mode: "0640"
    content: "{{ item.content }}"
    dest: "/usr/local/etc/bird-{{ item.filename }}"
  with_items: "{{ bird2_extra_configs | default([]) }}"
  notify: "reconfigure bird2"

- name: "Enable load of tcpmd5 in /boot/loader.conf"
  sysrc:
    name: "tcpmd5_load"
    value: "yes"
    dest: "/boot/loader.conf"
  notify: "load tcpmd5 module"

- name: "Create carpcontrol.d script to maintain bird include with all carp MASTER interfaces"
  import_tasks:
    file: "freebsd_host/tasks/carpcontrol.d.yml"
  vars:
    vhid: "any"
    state: "any"
    filename: "bird2"
    content: |
      #!/usr/local/bin/bash
      # carpcontrol.d hook script called on CARP state change
      # Maintains bird-direct-carp-interfaces.conf by commenting out interfaces in CARP BACKUP state
      # Maintains bird-static-routes-carp-ipv4.conf by commenting out static routes via CARP BACKUP interfaces
      # Part of https://github.com/tykling/ansible-roles/tree/master/bird2_server
      logger -t carp "${0} reconfiguring bird2 direct interface and static route files (called because ${1} became ${2})"

      # filter direct interfaces file based on CARP state
      INTERFACE_FILE=/usr/local/etc/bird-direct-carp-interfaces.conf
      TMP_FILE=$(mktemp /tmp/$(basename $0).XXXXXX) || exit 1
      for interface in $(/sbin/ifconfig -l -u); do
              /sbin/ifconfig $interface | /usr/bin/grep -q "carp: MASTER"
              if [ $? -eq 0 ]; then
                      echo "interface \"$interface\";" >> $TMPFILE
              else
                      echo "#interface \"$interface\";" >> $TMPFILE
              fi
      done
      diff -u $INTERFACE_FILE $TMP_FILE
      if [ $? -eq 1 ]; then
          mv $TMPFILE $INTERFACE_FILE
      fi

      # filter static route file to disable routes via CARP BACKUP interfaces
      STATIC_ROUTE_FILE=/usr/local/etc/bird-static-routes-carp-ipv4.conf
      TMP_FILE=$(/usr/bin/mktemp /tmp/"$(basename "$0")".XXXXXX) || exit 1
      cp $STATIC_ROUTE_FILE $TMP_FILE
      grep "^route " $STATIC_ROUTE_FILE | while read line; do
              # route destination
              NET=$(echo "$line" | /usr/bin/cut -d " " -f 2)
              # route gateway
              VIA=$(echo "$line" | /usr/bin/cut -d " " -f 4 | cut -d ";" -f 1)
              # the interface bird wants to reach this routes nexthop through
              BIRDIF=$(sudo birdc show route $NET primary | grep via | cut -d " " -f 4)
              # the actual interface for the nexthop
              NHIF=$(sudo birdc show route for $VIA primary | grep via | rev | cut -d " " -f 1 | rev)
              if [ "$BIRDIF" = "$NHIF" ]; then
                      # enable the route
                      sed -I "" "s|^#route ${NET}|route ${NET}|" $TMP_FILE
              else
                      # disable the route, bird is trying to use a CARP BACKUP interface
                      sed -I "" "s|^route ${NET}|#route ${NET}|" $TMP_FILE
              fi
      done
      diff -u $STATIC_ROUTE_FILE $TMP_FILE
      if [ $? -eq 1 ]; then
              mv $TMP_FILE $STATIC_ROUTE_FILE
      fi
      /usr/local/sbin/birdc configure
      logger -t carp "${0} done reconfiguring bird2 (was called because ${1} became ${2})"
