---
- name: "Install bird2"
  pkgng:
    name: "bird2"
    state: "present"
  notify: "start bird2"

- name: "Copy bird2 config"
  template:
    src: "bird.conf.j2"
    dest: "/usr/local/etc/bird.conf"
    mode: "0600"
  tags:
    - "birdconfig"
  notify: "carpconfigure bird2"

- name: "Create bird2 extra config files..."
  copy:
    owner: "root"
    group: "wheel"
    mode: "0640"
    content: "{{ item.content }}"
    dest: "/usr/local/etc/bird-{{ item.filename }}"
  with_items: "{{ bird2_extra_configs | default([]) }}"
  tags:
    - "birdconfig"
  notify: "carpconfigure bird2"

- name: "Enable load of tcpmd5 in /boot/loader.conf"
  sysrc:
    name: "tcpmd5_load"
    value: "yes"
    dest: "/boot/loader.conf"
  notify: "load tcpmd5 module"

- name: "Copy bird2 carpcontrol.d protocol enable config file"
  template:
    src: "bird-protocol-carpcontrol-enable.conf.j2"
    dest: "/usr/local/etc/bird-protocol-carpcontrol-enable.conf"
    mode: "0600"
  tags:
    - "birdconfig"
  notify: "carpconfigure bird2"

- name: "Create carpcontrol.d script to maintain bird include with all carp MASTER interfaces"
  import_tasks:
    file: "freebsd_host/tasks/carpcontrol.d.yml"
  vars:
    vhid: "any"
    state: "any"
    filename: "bird2"
    content: |
      #!/bin/sh
      # carpcontrol.d hook script called on CARP state change
      # Maintains bird-direct-carp-interfaces.conf by commenting out interfaces in CARP BACKUP state
      # Maintains bird-static-routes-carp-ipv4.conf by commenting out static routes via CARP BACKUP interfaces
      # Part of https://github.com/tykling/ansible-roles/tree/master/bird2_server
      logger -t carp "${0} reconfiguring bird2 direct interface and static route files (called because ${1} became ${2})"
      CHANGED=0
      # filter direct interfaces file based on CARP state
      INTERFACE_FILE=/usr/local/etc/bird-direct-carp-interfaces.conf
      TMP_FILE=$(mktemp /tmp/"$(basename "$0")".XXXXXX) || exit 1
      # this expects all CARP interfaces to be added to the group carp
      for interface in $(/sbin/ifconfig -l -u -g carp); do
              if /sbin/ifconfig "$interface" | /usr/bin/grep -q "carp: MASTER"; then
                      echo "interface \"$interface\";" >> "$TMP_FILE"
              else
                      echo "#interface \"$interface\";" >> "$TMP_FILE"
              fi
      done
      echo "interface \"-*\";" >> "$TMP_FILE"
      diff -u "$INTERFACE_FILE" "$TMP_FILE"
      if [ $? -eq 1 ]; then
          mv "$TMP_FILE" "$INTERFACE_FILE"
          CHANGED=1
      fi
      # filter static route file to disable routes via CARP BACKUP interfaces
      STATIC_ROUTE_FILE=/usr/local/etc/bird-static-routes-carp-ipv4.conf
      TMP_FILE=$(/usr/bin/mktemp /tmp/"$(basename "$0")".XXXXXX) || exit 1
      cp "$STATIC_ROUTE_FILE" "$TMP_FILE"
      grep -E "^(#)?route " "$STATIC_ROUTE_FILE" | while read -r line; do
              # route destination
              NET=$(echo "$line" | /usr/bin/cut -d " " -f 2)
              # route gateway
              GW=$(echo "$line" | /usr/bin/cut -d " " -f 4 | cut -d ";" -f 1)
              # the interface bird wants to reach this routes nexthop through
              BIRDOUT=$(birdc show route "$NET" primary | grep via)
              if [ $? -eq 0 ]; then
                      BIRDIF=$(echo "$BIRDOUT" | cut -d " " -f 4)
                      # is the interface enabled in the interface file?
                      if grep -q "^interface \"${BIRDIF}\";" "$INTERFACE_FILE"; then
                              # enable the route
                              sed -I "" "s|^#route ${NET}|route ${NET}|" "$TMP_FILE"
                      else
                              # disable the static route to prevent bird using a BACKUP interface
                              sed -I "" "s|^route ${NET}|#route ${NET}|" "$TMP_FILE"
                      fi
              else
                      # enable the route
                      sed -I "" "s|^#route ${NET}|route ${NET}|" "$TMP_FILE"
              fi
      done
      diff -u "$STATIC_ROUTE_FILE" "$TMP_FILE"
      if [ $? -eq 1 ]; then
              mv "$TMP_FILE" "$STATIC_ROUTE_FILE"
              CHANGED=1
      fi

      # enable/disable protocols based on vhid carp state
      PROTOCONFIG_FILE=/usr/local/etc/bird-protocol-carpcontrol-enable.conf
      grep -v "^#" "$PROTOCONFIG_FILE" | while read -r line; do
              VHIDIF=$(echo "$line" | /usr/bin/cut -d "," -f 1)
              VHID=$(echo "$VHIDIF" | /usr/bin/cut -d "@" -f 1)
              IF=$(echo "$VHIDIF" | /usr/bin/cut -d "@" -f 2)
              FILE=$(echo "$line" | /usr/bin/cut -d "," -f 2)
              STATE=$(ifconfig "$IF" | grep -E "carp: (INIT|MASTER|BACKUP) vhid $VHID" | cut -d " " -f 2)
              if [ "$STATE" = "MASTER" ]; then
                      echo "" > "$FILE"
              else
                      echo "disabled;" > "$FILE"
              fi
      done

      if [ $CHANGED -eq 1 ]; then
          /usr/local/sbin/birdc configure
      fi
      logger -t carp "${0} done reconfiguring bird2 (was called because ${1} became ${2})"
