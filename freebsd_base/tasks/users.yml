---
- name: "Add users (set password to 'changeme')"
  user:
    name: "{{ item.key }}"
    comment: "{{ item.value.comment }}"
    password: "$1$gbSjoDr0$NgvOjcEBSzdK.WqjWGEfw0"
    update_password: "on_create"
  with_dict: "{{ users | default({}) }}"
  tags: usermanagement

- name: "Add ssh authorized_keys"
  authorized_key:
    user: "{{ item.key }}"
    key: "{{ item.value.key }}"
  with_dict: "{{ users | default({}) }}"
  tags: usermanagement
  when: item.key is defined

- name: "Add #include line to sudoers"
  lineinfile:
    dest: "/usr/local/etc/sudoers"
    state: "present"
    line: "#includedir /usr/local/etc/sudoers.d"
    validate: "visudo -cf %s"

- name: "Add users to sudoers"
  lineinfile:
    dest: "/usr/local/etc/sudoers"
    state: "present"
    regexp: "^{{ item.key }} ALL=\\(ALL\\) ALL$"
    line: "{{ item.key }} ALL=(ALL) ALL"
    validate: "visudo -cf %s"
  with_dict: "{{ users | default({}) }}"
  when: item.value.sudo
  tags: usermanagement

- name: "Add extra users to sudoers"
  lineinfile:
    dest: "/usr/local/etc/sudoers"
    state: "present"
    regexp: "^{{ item }} ALL=\\(ALL\\) ALL$"
    line: "{{ item }} ALL=(ALL) ALL"
    validate: "visudo -cf %s"
  with_items: "{{ sudoers_extra_users | default([]) }}"
  tags: usermanagement

- name: "Add prometheus exporter user"
  user:
    name: "{{ prometheus_exporter_user }}"
    comment: "Prometheus exporter user"
    home: "/nonexistent"
    create_home: False
